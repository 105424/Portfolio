{"ts":1347520339230,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"$(document).ready(init);\r\nvar width;\r\nvar height;\r\nfunction init()\r\n{\r\n    console.log('--init--');\r\n    \r\n    setInterval(function(){\r\n        width = $(window).width();\r\n        height = $(window).height();\r\n    },10);\r\n\r\n    console.log(width);\r\n    console.log(height);\r\n    \r\n    if (typeof config != 'undefined') parseDivs(config);\r\n    else console.log('config not found');\r\n\r\n    $('.movable').live('mousedown', startMove); //did worth uiteindelijk gebruikt\r\n    $('#save').live('click', save); //de save functie die het object met de cordinaten gaat opslaan;\r\n    $('#load').live('click', load ); //de save functie die het object met de cordinaten gaat opslaan;\r\n    \r\n}\r\nfunction save(event)\r\n{   \r\n    console.log('---save----');\r\n    var _save = {};\r\n    \r\n    for(var i in divs)\r\n    {\r\n        _save[i] = divs[i].x+','+divs[i].y;\r\n    }\r\n\r\n    localStorage.setItem('save', JSON.stringify(_save));\r\n}\r\nfunction load(event)\r\n{\r\n    console.log('----load----');\r\n    var _load = JSON.parse(localStorage.getItem('save'));\r\n    \r\n    if(_load ===null) return;\r\n    \r\n    parseDivs(_load);\r\n}\r\nfunction startMove(event)\r\n{\r\n    $('html').css('cursor','move');\r\n   \r\n    console.log('----startmove----');\r\n    var type = $(this).attr('id');\r\n    target = divs[type];\r\n    \r\n    $('html').mouseup(function(event){\r\n        $('html').css('cursor','auto');\r\n        $('html').unbind('mousemove'); \r\n    });\r\n    \r\n    $('html').bind('mousemove',function(event){        \r\n        target.x = event.pageX;\r\n        target.y = event.pageY;\r\n        \r\n        target.update();\r\n    });\r\n}\r\nvar div = function(type,cordinates)\r\n{\r\n    console.log('----div: '+type+'----');\r\n    console.log($('body').find('#'+type)[0]);\r\n    if($('body').find('#'+type)[0]===undefined) \r\n    {\r\n        console.log('   div does not exist');\r\n        return;\r\n    }\r\n    \r\n    this.dom = $('body').find('#'+type);\r\n    \r\n    if(cordinates==='')\r\n    {\r\n        console.log('   no preset');\r\n        console.log('   off-top: '+$(this.dom).offset().top);\r\n        console.log('   off-left: '+$(this.dom).offset().left);\r\n        \r\n        this.x = $(this.dom).offset().left;\r\n        this.y = $(this.dom).offset().top;\r\n    }\r\n    else\r\n    {\r\n        console.log('   cordinates defined');\r\n        \r\n        var cords = cordinates.split(',');\r\n        var calc;\r\n        console.log('   split: '+cords); \r\n        if(isNaN(Number(cords[0]))===false) this.x = cords[0];\r\n        else\r\n        {  \r\n            console.log('   calculating width');\r\n            \r\n            var cordX = cords[0].split('+');\r\n            if (cordX[1] !== undefined) calc = '+';\r\n            else\r\n            {\r\n                cordX = cords[0].split('-');\r\n                calc = '-';\r\n            }\r\n            if(cordX[0]=='width')\r\n            {\r\n                if(calc=='-') this.x = width-cordX[1];\r\n                else if(calc=='+') this.x = width+cordX[1];           \r\n            }\r\n        }\r\n     \r\n        if(isNaN(Number(cords[1]))===false) this.y = cords[1];\r\n        else\r\n        {\r\n            var cordY = cords[1].split('+');\r\n            if (cordY[1] !== undefined) calc = '+';\r\n            else\r\n            {\r\n                cordY = cords[1].split('-');\r\n                calc = '-';\r\n            }\r\n            if(cordY[0]=='height')\r\n            {\r\n                if(calc=='-') this.y = height-cordY[1];\r\n                else if(calc=='+') this.y = height+cordY[1];\r\n            }\r\n        }\r\n    }\r\n    \r\n    $(this.dom).remove();\r\n    $('body').append(this.dom);\r\n    $(this.dom).addClass('movable');\r\n    \r\n    $(this.dom).css('top',this.y);\r\n    $(this.dom).css('left',this.x);\r\n};\r\ndiv.prototype.update = function()\r\n{\r\n    console.log('----update----');\r\n    $(this.dom).css('top',this.y);\r\n    $(this.dom).css('left',this.x) ;\r\n};\r\n\r\nvar divs = {};\r\n\r\nfunction parseDivs(toParse)\r\n{\r\n    console.log('-----toPare------');\r\n    for(var type in toParse)\r\n    {\r\n        divs[type] = new div(type,toParse[type]);\r\n    }   \r\n}"]],"start1":0,"start2":0,"length1":0,"length2":4016}]],"length":4016}
